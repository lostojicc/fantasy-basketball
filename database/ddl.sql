-- Table: admin
CREATE TABLE admin
(
    idk INTEGER GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT admin_pk PRIMARY KEY (idk)
);

-- Table: igra
CREATE TABLE igra
(
    datpr DATE NOT NULL,
    kosarkas_idkos INTEGER NOT NULL,
    klub_idkl INTEGER NOT NULL,
    CONSTRAINT igra_pk PRIMARY KEY (kosarkas_idkos, klub_idkl)
);

-- Table: igrac
CREATE TABLE igrac
(
    idk INTEGER GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT igrac_pk PRIMARY KEY (idk)
);

-- Table: ima_cijenu
CREATE TABLE ima_cijenu
(
    runda_idr INTEGER NOT NULL,
    kosarkas_idkos INTEGER NOT NULL,
    cijena REAL,
    CONSTRAINT ima_cijenu_pk PRIMARY KEY (runda_idr, kosarkas_idkos)
);

-- Table: javna
CREATE TABLE javna
(
    idl INTEGER GENERATED BY DEFAULT AS IDENTITY,
    admin_idk INTEGER NOT NULL,
    CONSTRAINT javna_pk PRIMARY KEY (idl)
);

-- Table: klub
CREATE TABLE klub
(
    idkl INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nazkl VARCHAR(40) NOT NULL,
    drzkl VARCHAR(20) NOT NULL,
    kbiokl VARCHAR(125),
    strkl VARCHAR(20),
    CONSTRAINT klub_pk PRIMARY KEY (idkl)
);

-- Table: korisnik
CREATE TABLE korisnik
(
    idk INTEGER GENERATED BY DEFAULT AS IDENTITY,
    korime VARCHAR(30) NOT NULL,
    sif VARCHAR(64) NOT NULL,
    ime VARCHAR(100),
    prz VARCHAR(100),
    datrodj DATE,
    drz VARCHAR(20),
    tipk VARCHAR(5) NOT NULL,
    CONSTRAINT ch_inh_korisnik CHECK (tipk IN ('Admin', 'Igrac')),
    CONSTRAINT korisnik_pk PRIMARY KEY (idk)
);

-- Table: kosarkas
CREATE TABLE kosarkas
(
    idkos INTEGER GENERATED BY DEFAULT AS IDENTITY,
    imekos VARCHAR(20) NOT NULL,
    przkos VARCHAR(20) NOT NULL,
    g CHAR(1) NOT NULL,
    f CHAR(1) NOT NULL,
    c CHAR(1) NOT NULL,
    fpa REAL,
    CONSTRAINT kosarkas_pk PRIMARY KEY (idkos)
);

-- Table: liga
CREATE TABLE liga
(
    idl INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nazl VARCHAR(20) NOT NULL,
    opisl VARCHAR(125),
    datkl DATE NOT NULL,
    tipl VARCHAR(8) NOT NULL,
    CONSTRAINT ch_inh_liga CHECK (tipl IN ('Javna', 'Privatna')),
    CONSTRAINT liga_pk PRIMARY KEY (idl)
);

-- Table: nagrada
CREATE TABLE nagrada
(
    idn INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nazn VARCHAR(20) NOT NULL,
    opisn VARCHAR(125),
    CONSTRAINT nagrada_pk PRIMARY KEY (idn)
);

-- Table: ostv_stat
CREATE TABLE ostv_stat
(
    igra_kosarkas_idkos INTEGER NOT NULL,
    igra_klub_idkl INTEGER NOT NULL,
    se_nadmece_rbu INTEGER NOT NULL,
    se_nadmece_idr INTEGER NOT NULL,
    p INTEGER,
    s INTEGER,
    a INTEGER,
    u INTEGER,
    lg INTEGER,
    b INTEGER,
    pb INTEGER,
    ps INTEGER,
    f INTEGER,
    psb INTEGER,
    il INTEGER,
    CONSTRAINT ostv_stat_pk PRIMARY KEY (igra_kosarkas_idkos, igra_klub_idkl, se_nadmece_rbu, se_nadmece_idr)
);

-- Table: osvaja
CREATE TABLE osvaja
(
    ucestvuje_idt INTEGER NOT NULL,
    ucestvuje_liga_idl INTEGER NOT NULL,
    nagrada_idn INTEGER NOT NULL,
    CONSTRAINT osvaja_pk PRIMARY KEY (ucestvuje_idt, ucestvuje_liga_idl, nagrada_idn)
);

-- Table: poruka
CREATE TABLE poruka
(
    idpor INTEGER GENERATED BY DEFAULT AS IDENTITY,
    datsl DATE NOT NULL,
    korisnik_idk INTEGER NOT NULL,
    CONSTRAINT poruka_pk PRIMARY KEY (idpor, korisnik_idk)
);

-- Table: prima
CREATE TABLE prima
(
    korisnik_idk INTEGER NOT NULL,
    poruka_idpor INTEGER NOT NULL,
    poruka_idk INTEGER NOT NULL,
    CONSTRAINT prima_pk PRIMARY KEY (korisnik_idk, poruka_idpor, poruka_idk)
);

-- Table: privatna
CREATE TABLE privatna
(
    idl INTEGER GENERATED BY DEFAULT AS IDENTITY,
    sifrapl VARCHAR(64) NOT NULL,
    igrac_idk INTEGER NOT NULL,
    CONSTRAINT privatna_pk PRIMARY KEY (idl)
);

-- Table: regrutuje
CREATE TABLE regrutuje
(
    kosarkas_idkos INTEGER NOT NULL,
    se_takmici_idt INTEGER NOT NULL,
    se_takmici_idr INTEGER NOT NULL,
    CONSTRAINT regrutuje_pk PRIMARY KEY (kosarkas_idkos, se_takmici_idt, se_takmici_idr)
);

-- Table: runda
CREATE TABLE runda
(
    idr INTEGER GENERATED BY DEFAULT AS IDENTITY,
    datpoc DATE,
    datz DATE,
    CONSTRAINT runda_pk PRIMARY KEY (idr)
);

-- Table: se_nadmece
CREATE TABLE se_nadmece
(
    domacin CHAR(1) NOT NULL,
    utakmica_rbu INTEGER NOT NULL,
    utakmica_runda_idr INTEGER NOT NULL,
    klub_idkl INTEGER NOT NULL,
    CONSTRAINT se_nadmece_pk PRIMARY KEY (utakmica_rbu, utakmica_runda_idr, klub_idkl)
);

-- Table: se_takmici
CREATE TABLE se_takmici
(
    tim_idt INTEGER NOT NULL,
    runda_idr INTEGER NOT NULL,
    CONSTRAINT se_takmici_pk PRIMARY KEY (tim_idt, runda_idr)
);

-- Table: tim
CREATE TABLE tim
(
    idt INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nazt VARCHAR(24) NOT NULL,
    datkt DATE NOT NULL,
    ukp REAL NOT NULL,
    budz REAL NOT NULL,
    igrac_idk INTEGER NOT NULL,
    CONSTRAINT tim_pk PRIMARY KEY (idt)
);

-- Table: ucestvuje
CREATE TABLE ucestvuje
(
    tim_idt INTEGER NOT NULL,
    liga_idl INTEGER NOT NULL,
    CONSTRAINT ucestvuje_pk PRIMARY KEY (tim_idt, liga_idl)
);

-- Table: utakmica
CREATE TABLE utakmica
(
    rbu INTEGER GENERATED BY DEFAULT AS IDENTITY,
    dativru DATE NOT NULL,
    rezu VARCHAR(7),
    zav CHAR(1) NOT NULL,
    runda_idr INTEGER NOT NULL,
    CONSTRAINT utakmica_pk PRIMARY KEY (rbu, runda_idr)
);

-- Foreign Keys
ALTER TABLE admin
    ADD CONSTRAINT admin_korisnik_fk FOREIGN KEY (idk)
    REFERENCES korisnik (idk);

ALTER TABLE igra
    ADD CONSTRAINT igra_klub_fk FOREIGN KEY (klub_idkl)
    REFERENCES klub (idkl);

ALTER TABLE igra
    ADD CONSTRAINT igra_kosarkas_fk FOREIGN KEY (kosarkas_idkos)
    REFERENCES kosarkas (idkos);

ALTER TABLE igrac
    ADD CONSTRAINT igrac_korisnik_fk FOREIGN KEY (idk)
    REFERENCES korisnik (idk);

ALTER TABLE ima_cijenu
    ADD CONSTRAINT ima_cijenu_kosarkas_fk FOREIGN KEY (kosarkas_idkos)
    REFERENCES kosarkas (idkos);

ALTER TABLE ima_cijenu
    ADD CONSTRAINT ima_cijenu_runda_fk FOREIGN KEY (runda_idr)
    REFERENCES runda (idr);

ALTER TABLE javna
    ADD CONSTRAINT javna_admin_fk FOREIGN KEY (admin_idk)
    REFERENCES admin (idk);

ALTER TABLE javna
    ADD CONSTRAINT javna_liga_fk FOREIGN KEY (idl)
    REFERENCES liga (idl);

ALTER TABLE ostv_stat
    ADD CONSTRAINT ostv_stat_igra_fk FOREIGN KEY (igra_kosarkas_idkos, igra_klub_idkl)
    REFERENCES igra (kosarkas_idkos, klub_idkl);

ALTER TABLE ostv_stat
    ADD CONSTRAINT ostv_stat_se_nadmece_fk FOREIGN KEY (se_nadmece_rbu, se_nadmece_idr, igra_klub_idkl)
    REFERENCES se_nadmece (utakmica_rbu, utakmica_runda_idr, klub_idkl);

ALTER TABLE osvaja
    ADD CONSTRAINT osvaja_nagrada_fk FOREIGN KEY (nagrada_idn)
    REFERENCES nagrada (idn);

ALTER TABLE osvaja
    ADD CONSTRAINT osvaja_ucestvuje_fk FOREIGN KEY (ucestvuje_idt, ucestvuje_liga_idl)
    REFERENCES ucestvuje (tim_idt, liga_idl);

ALTER TABLE poruka
    ADD CONSTRAINT poruka_korisnik_fk FOREIGN KEY (korisnik_idk)
    REFERENCES korisnik (idk);

ALTER TABLE prima
    ADD CONSTRAINT prima_korisnik_fk FOREIGN KEY (korisnik_idk)
    REFERENCES korisnik (idk);

ALTER TABLE prima
    ADD CONSTRAINT prima_poruka_fk FOREIGN KEY (poruka_idpor, poruka_idk)
    REFERENCES poruka (idpor, korisnik_idk);

ALTER TABLE privatna
    ADD CONSTRAINT privatna_igrac_fk FOREIGN KEY (igrac_idk)
    REFERENCES igrac (idk);

ALTER TABLE privatna
    ADD CONSTRAINT privatna_liga_fk FOREIGN KEY (idl)
    REFERENCES liga (idl);

ALTER TABLE regrutuje
    ADD CONSTRAINT regrutuje_kosarkas_fk FOREIGN KEY (kosarkas_idkos)
    REFERENCES kosarkas (idkos);

ALTER TABLE regrutuje
    ADD CONSTRAINT regrutuje_se_takmici_fk FOREIGN KEY (se_takmici_idt, se_takmici_idr)
    REFERENCES se_takmici (tim_idt, runda_idr);

ALTER TABLE se_nadmece
    ADD CONSTRAINT se_nadmece_klub_fk FOREIGN KEY (klub_idkl)
    REFERENCES klub (idkl);

ALTER TABLE se_nadmece
    ADD CONSTRAINT se_nadmece_utakmica_fk FOREIGN KEY (utakmica_rbu, utakmica_runda_idr)
    REFERENCES utakmica (rbu, runda_idr);

ALTER TABLE se_takmici
    ADD CONSTRAINT se_takmici_runda_fk FOREIGN KEY (runda_idr)
    REFERENCES runda (idr);

ALTER TABLE se_takmici
    ADD CONSTRAINT se_takmici_tim_fk FOREIGN KEY (tim_idt)
    REFERENCES tim (idt);

ALTER TABLE tim
    ADD CONSTRAINT tim_igrac_fk FOREIGN KEY (igrac_idk)
    REFERENCES igrac (idk);

ALTER TABLE ucestvuje
    ADD CONSTRAINT ucestvuje_liga_fk FOREIGN KEY (liga_idl)
    REFERENCES liga (idl);

ALTER TABLE ucestvuje
    ADD CONSTRAINT ucestvuje_tim_fk FOREIGN KEY (tim_idt)
    REFERENCES tim (idt);

ALTER TABLE utakmica
    ADD CONSTRAINT utakmica_runda_fk FOREIGN KEY (runda_idr)
    REFERENCES runda (idr);

-- Trigger functions and triggers for inheritance checks
-- Trigger for admin
CREATE OR REPLACE FUNCTION check_admin_korisnik_type()
RETURNS TRIGGER AS $$
DECLARE
    korisnik_tipk VARCHAR(5);
BEGIN
    SELECT k.tipk INTO korisnik_tipk
    FROM korisnik k
    WHERE k.idk = NEW.idk;

    IF korisnik_tipk IS NULL OR korisnik_tipk <> 'Admin' THEN
        RAISE EXCEPTION 'fk admin_korisnik_fk in table admin violates arc constraint on table korisnik - discriminator column tipk doesn''t have value ''Admin''';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER arc_fkarc_1_admin
BEFORE INSERT OR UPDATE OF idk ON admin
FOR EACH ROW
EXECUTE FUNCTION check_admin_korisnik_type();

-- Trigger for igrac
CREATE OR REPLACE FUNCTION check_igrac_korisnik_type()
RETURNS TRIGGER AS $$
DECLARE
    korisnik_tipk VARCHAR(5);
BEGIN
    SELECT k.tipk INTO korisnik_tipk
    FROM korisnik k
    WHERE k.idk = NEW.idk;

    IF korisnik_tipk IS NULL OR korisnik_tipk <> 'Igrac' THEN
        RAISE EXCEPTION 'fk igrac_korisnik_fk in table igrac violates arc constraint on table korisnik - discriminator column tipk doesn''t have value ''Igrac''';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER arc_fkarc_1_igrac
BEFORE INSERT OR UPDATE OF idk ON igrac
FOR EACH ROW
EXECUTE FUNCTION check_igrac_korisnik_type();

-- Trigger for javna
CREATE OR REPLACE FUNCTION check_javna_liga_type()
RETURNS TRIGGER AS $$
DECLARE
    liga_tipl VARCHAR(8);
BEGIN
    SELECT l.tipl INTO liga_tipl
    FROM liga l
    WHERE l.idl = NEW.idl;

    IF liga_tipl IS NULL OR liga_tipl <> 'Javna' THEN
        RAISE EXCEPTION 'fk javna_liga_fk in table javna violates arc constraint on table liga - discriminator column tipl doesn''t have value ''Javna''';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER arc_fkarc_2_javna
BEFORE INSERT OR UPDATE OF idl ON javna
FOR EACH ROW
EXECUTE FUNCTION check_javna_liga_type();

-- Trigger for privatna
CREATE OR REPLACE FUNCTION check_privatna_liga_type()
RETURNS TRIGGER AS $$
DECLARE
    liga_tipl VARCHAR(8);
BEGIN
    SELECT l.tipl INTO liga_tipl
    FROM liga l
    WHERE l.idl = NEW.idl;

    IF liga_tipl IS NULL OR liga_tipl <> 'Privatna' THEN
        RAISE EXCEPTION 'fk privatna_liga_fk in table privatna violates arc constraint on table liga - discriminator column tipl doesn''t have value ''Privatna''';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER arc_fkarc_2_privatna
BEFORE INSERT OR UPDATE OF idl ON privatna
FOR EACH ROW
EXECUTE FUNCTION check_privatna_liga_type();
